<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022-11-19-hello-world/"/>
      <url>/2022-11-19-hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022-10-21-learning_rust/"/>
      <url>/2022-10-21-learning_rust/</url>
      
        <content type="html"><![CDATA[<p>摘要</p><span id="more"></span><h1 id="Learning-Rust-Progress"><a href="#Learning-Rust-Progress" class="headerlink" title="Learning Rust Progress"></a>Learning Rust Progress</h1><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p>Reading list：</p><ul><li>…</li></ul><p>Waiting list:</p><ul><li>The Rust Standard Library</li><li>The Rust Reference (Rust 语言规范参考)</li><li>The Rust Cookbook (PS: 各种编程实践)</li></ul><p>Books:</p><ul><li><input checked="" disabled="" type="checkbox"> The Rust Programming Language</li><li><input checked="" disabled="" type="checkbox"> mdBook Documentation</li><li><input checked="" disabled="" type="checkbox"> Rust 圣经</li><li><input disabled="" type="checkbox"> The Rust Standard Library (标准库)</li><li><input disabled="" type="checkbox"> The Rust Reference (Rust 语言规范参考)</li><li><input disabled="" type="checkbox"> The Rust Cookbook (PS: 各种编程实践)</li><li><input disabled="" type="checkbox"> Rusty Book (Awesome + Cookbook)</li><li><input disabled="" type="checkbox"> …</li></ul><p>Articles:</p><ul><li><input checked="" disabled="" type="checkbox"> learning-rust-in-2020</li><li><input disabled="" type="checkbox"> …</li></ul><p>Tools:</p><ul><li><input checked="" disabled="" type="checkbox"> mdBook</li><li><input checked="" disabled="" type="checkbox"> Rustlings</li><li><input disabled="" type="checkbox"> …</li></ul><h2 id="Books-amp-Articles"><a href="#Books-amp-Articles" class="headerlink" title="Books &amp; Articles"></a>Books &amp; Articles</h2><h3 id="The-Rust-Programming-Language"><a href="#The-Rust-Programming-Language" class="headerlink" title="The Rust Programming Language"></a>The Rust Programming Language</h3><p>Address:</p><ul><li>en: <a href="https://doc.rust-lang.org/book/">https://doc.rust-lang.org/book/</a></li><li>zh: <a href="https://www.rustwiki.org.cn/zh-CN/book/">https://www.rustwiki.org.cn/zh-CN/book/</a></li></ul><p>Date：2022&#x2F;10&#x2F;08-2022&#x2F;10&#x2F;20</p><p>Notebook：<a href="./rust.html">rust.md</a></p><p>这本书是官方提供的书，中文名称为<code>Rust 程序设计语言</code>，出版名为<code>Rust 权威指南</code>。我入门Rust阅读的第一本书，印证了Rust学习路线陡峭。其中的<code>引用借用</code>、<code>所有权</code>，是相比其他有指针语言难以理解，而最后一部分的高级特性是晦涩难懂。但是，作为刚入门，还有很多需要学习的地方，而幸运的Rust社区提供很多好文章，可以继续学习。</p><h3 id="mdBook-Documentation"><a href="#mdBook-Documentation" class="headerlink" title="mdBook Documentation"></a>mdBook Documentation</h3><p>Address:</p><ul><li>en: <a href="https://rust-lang.github.io/mdBook/index.html">https://rust-lang.github.io/mdBook/index.html</a></li><li>zh: <a href="https://hellowac.github.io/mdbook_doc/zh-cn/index.html">https://hellowac.github.io/mdbook_doc&#x2F;zh-cn&#x2F;index.html</a></li></ul><p>mdBook 工具指导。mdBook 是一个文档构建工具。</p><h3 id="Rust-圣经"><a href="#Rust-圣经" class="headerlink" title="Rust 圣经"></a>Rust 圣经</h3><p>Address: <a href="https://course.rs/">https://course.rs</a></p><p>Date: 2022&#x2F;10&#x2F;22</p><p>阅读了几章后，发现是 Rust 官方的中文版的个人版，多了一些白话和理解。但是没有更多的解释，例子包括官方的例子和一些自己的例子。或许后面的实战章节会更好一点？后面的多了一些章节深入的探究。生命周期不错。</p><p>Date: 2022&#x2F;10&#x2F;25</p><p>基本把<code>Rust 圣经</code>看完了，这本书将中文翻译的内容打散，放在其中的2，3章中，从第三章开始，多了许多作者的理解；</p><ul><li>第四章讲了Rust中的异步编程，开始拓展；</li><li>第五章针对容易混淆的地方进行对比，但是很多有还没有完成；</li><li>第六介绍如何进行测试和使用<code>Github Actions</code>；</li><li>第七章介绍使用<code>Cargo</code>；</li><li>第九章介绍日志；</li><li>第十章关于Rust实践的介绍；</li><li>第十一章：这一章是英文书<code>Learn Rust With Entirely Too Many Linked Lists</code>的翻译，简述如何通过链表实现栈和队列。从简单的链接开始实现，然后逐渐完善和优化，难度十分大。</li><li>剩下的内容还没有完成。</li></ul><p>接下来，应该是开始实现一些项目，然后一边参考标准库。</p><h3 id="Learn-Rust-With-Entirely-Too-Many-Linked-Lists"><a href="#Learn-Rust-With-Entirely-Too-Many-Linked-Lists" class="headerlink" title="Learn Rust With Entirely Too Many Linked Lists"></a>Learn Rust With Entirely Too Many Linked Lists</h3><p>Address: <a href="https://rust-unofficial.github.io/too-many-lists/">Link</a></p><p>简述如何使用Rust创建链表，实现栈和队列。</p><h3 id="learning-rust-in-2020"><a href="#learning-rust-in-2020" class="headerlink" title="learning-rust-in-2020"></a>learning-rust-in-2020</h3><p>Address:</p><ul><li>en: <a href="https://github.com/pretzelhammer/rust-blog/blob/master/posts/learning-rust-in-2020.md">learning-rust-in-2020</a></li><li>zh: <a href="https://github.com/rustlang-cn/Rustt/blob/main/Articles/%5B2022-04-02%5D%20Rust%20%E5%A4%A7%E4%BD%AC%E7%BB%99%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%BB%BA%E8%AE%AE.md">Rust 大佬给初学者的学习建议</a></li></ul><blockquote><p>摘要</p><p>如果你是一个完完全全的 Rust 小白，想要在一天中尽可能多的学习 Rust，那我推荐你去阅读 fasterthanlime 的《半小时快速了解 Rust》，然后完成 Rustlings 项目中的练习。</p><p>如果你已经学过 Rust 的基本语法，你可以试着做一下 Exercism.io 网站上的 Rust 部分。如果你遇到了问题，你可以在 Google 或者 StackOverflow 上寻求帮助。我推荐你花点时间来简单的阅读和浏览一下《Rust Standard Library Docs》，它是一个很棒的学习资料，里面有一些简单且实用例子去帮助你更好的使用 Rust 的标准库。《Rust by Example》也是一本高质量的参考资料，你可以通过他快速的学习 Rust 的语法和特性。如果你想要更深入的理解 Rust 的某一个概念，那么我推荐你在《The Rust Programming Language》这本书中寻找相关的章节去阅读。尤其推荐在 Exercism.io 上进行练习。在完成每个题目之后，你可以查看其他所有人的题解，可以按点赞数排序来找到通俗易懂并且巧妙的题解。这是一种很棒的学习方式。</p><p>此时，你可能已经是一个高级的初学者，能够找到属于自己的学习路线。但，如果你还需要更多的指导并想要尝试用 Rust 来写一些简单的程序，我推荐你试一着做一下 Advent of Code 2018 Calendar 上的练习。为什么推荐你做 2018 年的题目呢？因为当你做完了这个练习，你可以和 BurntSushi 提供的答案（ BurntSushi’s Advent of Code 2018 Rust solutions）进行对比。BurntSushi 写的 Rust 代码整洁、可读性强、通俗易懂。阅读一个有经验的 Rustacean 的代码将会使你受益无穷。</p></blockquote><p>作者从过来人的角度，介绍了学习Rust的一些路线和工具。确实提供了一些帮助。<br>文章的中间还介绍了几个Rust练习场的好坏，以及推荐你去哪里进行练习。<br>原作者库：<a href="https://github.com/pretzelhammer/rust-blog">pretzelhammer&#x2F;rust-blog</a>，还有其他一些文章值得阅读。</p><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><h3 id="Rustlings"><a href="#Rustlings" class="headerlink" title="Rustlings"></a>Rustlings</h3><p>Address:</p><ul><li>en: <a href="https://github.com/rust-lang/rustlings/">https://github.com/rust-lang/rustlings/</a></li><li>zh: <a href="https://github.com/rust-lang-cn/rustlings-cn">https://github.com/rust-lang-cn/rustlings-cn</a></li></ul><p>Install:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">find out the latest version at https://github.com/rust-lang/rustlings/releases/latest (on edit 5.2.1)</span><br>git clone -b 5.2.1 --depth 1 https://github.com/rust-lang/rustlings<br>cd rustlings<br>cargo install --force --path .<br></code></pre></td></tr></table></figure><p>这个是官方提供的Rust学习工具，提供关于Rust的练习。可以通过命令行下载源，使用<code>cargo</code>下载依赖进行使用。通过提供的编译错误，编写解决目标Rust文件的代码。在我阅读完<code>The Rust Programming Language</code>后，目前只能解决到<code>iterator</code>。其中有些题目过于简单，而有些题目突然难度折跃性暴涨，会使人不知所措。</p>]]></content>
      
      
      <categories>
          
          <category> Rust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rust </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
